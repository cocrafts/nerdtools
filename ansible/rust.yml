- name: Setup rust toolchain
  hosts: local
  vars:
    cargo_bin: "~/.cargo/bin"

  tasks:
    - name: Check if cargo is installed
      shell: command -v cargo
      register: cargo_exists
      ignore_errors: yes

    - name: Download Installer
      when: cargo_exists is failed
      get_url:
        url: https://sh.rustup.rs
        dest: ~/sh.rustup.rs
        mode: "0755"
        force: "yes"
      tags:
        - rust

    - name: Install rust/cargo
      when: cargo_exists is failed
      shell: ~/sh.rustup.rs -y
      tags:
        - rust

    - name: Install rust-analyzer
      command: "{{cargo_bin}}/rustup component add rust-analyzer"
      args:
        creates: "{{cargo_bin}}/rust-analyzer"

    - name: Install bat
      command: "{{cargo_bin}}/cargo install --locked bat"
      args:
        creates: "{{cargo_bin}}/bat"

    - name: Install cargo mise, generic version manager
      command: "{{cargo_bin}}/cargo install mise"
      args:
        creates: "{{cargo_bin}}/mise"

    - name: Install cargo typos-cli
      command: "{{cargo_bin}}/cargo install typos-cli"
      args:
        creates: "{{cargo_bin}}/typos"

    - name: Install cargo neocmakelsp
      command: "{{cargo_bin}}/cargo install neocmakelsp"
      args:
        creates: "{{cargo_bin}}/neocmakelsp"

    - name: Install cargo stylua
      command: "{{cargo_bin}}/cargo install stylua"
      args:
        creates: "{{cargo_bin}}/stylua"

    - name: Install cargo selene
      command: "{{cargo_bin}}/cargo install selene"
      args:
        creates: "{{cargo_bin}}/selene"

    - name: Install cargo nushell
      command: "{{cargo_bin}}/cargo install nu --locked"
      args:
        creates: "{{cargo_bin}}/selene"

    - name: Install starship
      shell: "{{cargo_bin}}/cargo install starship --locked"
      args:
        creates: "{{cargo_bin}}/starship"

    - name: Install taplo-cli (for Toml)
      shell: "{{cargo_bin}}/cargo install --features lsp --locked taplo-cli"
      args:
        creates: "{{cargo_bin}}/taplo"
